{"version":3,"sources":["marketMaker/reducers/marketPrice.js","marketMaker/reducers/marketGroups.js","marketMaker/constants/ActionTypes.js","marketMaker/reducers/corePrice.js","marketMaker/reducers/save_tr.js","marketMaker/reducers/save_pricingList.js","marketMaker/reducers/setTheme.js","marketMaker/reducers/marketDetail.js","marketMaker/reducers/symbolList.js","marketMaker/reducers/distribution.js","marketMaker/reducers/saveParam.js","marketMaker/reducers/stocketReducer.js","marketMaker/reducers/bookheader.js","marketMaker/reducers/counterParty.js","marketMaker/reducers/counterpty.js","marketMaker/reducers/rfqTable.js","marketMaker/reducers/tradeBlotter.js","marketMaker/reducers/liquidity.js","marketMaker/reducers/riskmonitor.js","marketMaker/reducers/autohedge.js","marketMaker/reducers/clientFlow.js","marketMaker/reducers/manualQuote.js","marketMaker/reducers/globalReducer.js","marketMaker/reducers/currentStrategy.js","marketMaker/reducers/manualTrading.js","marketMaker/reducers/marketRisk.js","marketMaker/reducers/operationRisk.js","marketMaker/reducers/riskMonitorMain.js","marketMaker/reducers/creditCounterParty.js","marketMaker/reducers/marketDataReducer.js","marketMaker/reducers/systemAlertReducer.js","marketMaker/reducers/spdb/odmReducer.js","common/store/reducerIndex.js","marketMaker/constants/spdb/ActionTypes.js","common/store/index.js","marketMaker/pages/home/index.js","common/routes/Routes.js","marketMaker/utils/history.js","marketMaker/App.js","marketMaker/utils/serviceWorker.js","index.js"],"names":["initialState","marketPriceList","dragValue","isFlashData","GroupsReducer","state","arguments","length","undefined","action","type","Object","objectSpread","list","payload","list_update","corePriceList","marketConfigList","currentCorePrice","Save_trReducer","find_PrincingReducer","pricingList","themeReducer","theme","showDetailPage","applyBtn","SymbolListReducer","normal_list","group_list","group_name","distributionList","distributionQuoteList","quoteSourceList","paramReducer","strategyParam","stocketReducer","referencePriceData","socketList","socket_instanceList","btnName","paramList","btnIndex","inputInfo","CounterPartyReducer","console","log","nameObj","list_drag","list_save","loading","counterPartyList","quoteList","quoteID","orderList","totalRecords","TradeBlotterReducer","data","addList","addListCopy","addLoading","mktPriceMsg","referencePrice","LiquidityReducer","ccyPosiLoading","positionList","ccyPosiList","unsaved","hedgeList","selectValue","clientFlowList","showClientFlow","showRiskMonitor","showManualTrading","showRradeBlotter","manualQuoteList","quoteSource","quoteOutput","marketPrice","marketPriceRecord","minTicks","orderBook","connected","showNotification","currentStrategy","isFixed","manualTradingQuoteRequest","todayQuoteRequest","manualQuoteRequestInfo","showMarket","showOperation","marketRiskStatus","riskAlert","groupLoading","cptyList","groupList","currentGroup","selectedCpty","marketData","appliedMarket","systemAlert","systemAlertReducer","orderBookList","tradingvarietymanage","selectedQuotes","orderBook1","orderBook2","orderBook3","mkData","clickId","allBook","paintPrice","socketConnected","rootReducer","combineReducers","toConsumableArray","groupsReducer","corePrice","newCorePriceList","newCurrentCorePrice","i","id","push","splice","referencePriceSourceLists","sourceItemId","init","targetStatus","Save_PricingList","marketDetail","Distribution","newDistributionList","lastActionType","bookHeader","strategyList","rfqTable","quoteMessage","tradeBlotterReducer","globalReducer","riskMonitorReducer","autoHedgeReducer","clientFlowReducer","manualQuoteReducer","currentStrategyReducer","manualTradingReducer","currentQuoteRequestId","findTodayOrderGet","marketRiskReducer","operationRiskReducer","creditCptyReducer","riskMonitorMain","marketDataReducer","odmReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","HomePage","tradeType","react_default","a","createElement","style","textAlign","marginTop","React","Component","connect","dispatch","Routes","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","Switch","Route","exact","path","component","Home","withRouter","history","createBrowserHistory","App","react_redux_es","Router","className","routes_Routes","Boolean","location","hostname","match","require","ReactDOM","render","marketMaker_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03e4d545.chunk.js","sourcesContent":["import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    marketPriceList:[],\n    dragValue:[],\n    isFlashData:false\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.MAERKET_CONFIG_LIST:\n        return {\n            ...state,\n            marketPriceList: action.payload,\n        };\n    case ActionTypes.GET_DRAG_VAL:\n        return {\n            ...state,\n            dragValue:[...action.payload],\n        }  ;  \n    case ActionTypes.SAVE_CONFIG_DADA:\n        return {\n            ...state,\n            marketPriceList: action.payload.data,\n            isFlashData:action.payload.isFlashData,\n        }  ;  \n    default:\n        return state;\n    }\n};\n","import { GET_GROUPS, CREATE_GROUPS, UPDATE_GROUPS, DELETE_GROUPS } from \"../constants/ActionTypes\";\n\nconst initialState = {};\n\nconst GroupsReducer = (state=initialState, action) => {\n    switch (action.type) {\n    case GET_GROUPS:\n        return {\n            ...state,\n            list: action.payload\n        };\n    case CREATE_GROUPS:\n        return {\n            ...state,\n            list: action.list\n        };\n    case UPDATE_GROUPS:\n        return {\n            ...state,\n            list_update: action.list\n        };\n    case DELETE_GROUPS:\n        return {\n            ...state,\n            list: action.list\n        };\n    default:\n        return state;\n    }\n};\n\nexport default GroupsReducer;","\nexport const SET_THEME = \"SET_THEME\";\nexport const MAERKET_CONFIG_LIST = \"MAERKET_CONFIG_LIST\";\nexport const GET_GROUPS = \"GET_GROUPS\";\nexport const GET_DRAG_VAL =\"GET_DRAG_VAL\";\nexport const GET_CORE_PRICE_LIST = \"CORE_PRICE_LIST\";\nexport const GET_CORE_PRICE_BY_ID = \"GET_CORE_PRICE_BY_ID\";\nexport const CHANGE_SOURCE_INIT_STATUS = \"CHANGE_SOURCE_INIT_STATUS\";\nexport const SAVE_CORE_PRICE = \"SAVE_CORE_PRICE\";\nexport const CREATE_CORE_PRICE = \"CREATE_CORE_PRICE\";\nexport const CORE_PRICE_MAERKET_CONFIG_LIST = \"CORE_PRICE_MAERKET_CONFIG_LIST\";\nexport const DELETE_CORE_PRICE = \"DELETE_CORE_PRICE\";\nexport const CREATE_GROUPS = \"CREATE_GROUPS\";\nexport const UPDATE_GROUPS = \"UPDATE_GROUPS\";\nexport const DELETE_GROUPS = \"DELETE_GROUPS\";\nexport const SAVE_TR = \"SAVE_TR\";\nexport const SAVE_PRICING_LIST = \"SAVE_PRICING_LIST\";\nexport const FIND_PRICING_LIST = \"FIND_PRICING_LIST\";\nexport const DELETE_PRICING_LIST = \"DELETE_PRICING_LIST\";\n\n\n//market price\nexport const SAVE_CONFIG_DADA = \"SAVE_CONFIG_DADA\";\n\n//marketDetail\nexport const MARKET_PAGE_EX =\"MARKET_PAGE_EX\";\nexport const GET_SYMBOLLIST =\"GET_SYMBOLLIST\";\nexport const SAVE_PARAM =\"SAVE_PARAM\";\nexport const START_INSTANCE =\"START_INSTANCE\";\nexport const SAVE_SOCKET =\"SAVE_SOCKET\";\nexport const SAVE_SOCKET_INSTANCEOUTPUT =\"SAVE_SOCKET_INSTANCEOUTPUT\";\nexport const COUNTER_PARTY =\"COUNTER_PARTY\";\nexport const COUNTER_PARTY_DRAG =\"COUNTER_PARTY_DRAG\";\nexport const COUNTER_PARTY_SAVE =\"COUNTER_PARTY_SAVE\";\n\nexport const SAVE_MINTICK =\"SAVE_MINTICK\";\nexport const SAVE_APPLY_BTN =\"SAVE_APPLY_BTN\";\n\n//check login\nexport const MARKET_LOGIN =\"MARKET_LOGIN\";\nexport const MARKET_POST_LOGIN =\"MARKET_POST_LOGIN\";\n\n//distribution\nexport const GET_DISTRIBUTION_LIST_BY_INSTANCE_ID = \"GET_DISTRIBUTION_LIST_BY_INSTANCE_ID\";\nexport const SAVE_DISTRIBUTION = \"SAVE_DISTRIBUTION\";\nexport const ADD_DISTRIBUTION = \"ADD_DISTRIBUTION\";\nexport const DELETE_DISTRIBUTION_BY_ID = \"DELETE_DISTRIBUTION_BY_ID\";\nexport const SAVE_QUOTE = \"SAVE_QUOTE\";\nexport const GET_QUOTE_SOURCE_LIST = \"GET_QUOTE_SOURCE_LIST\";\n\n//reference price\nexport const GET_REFERENCE =\"GET_REFERENCE\";\n\n//bookheader\nexport const STRATEGY_LIST =\"STRATEGY_LIST\";\n//策略按钮列表\n// export const STRATEGY_BTN_LIST =\"STRATEGY_BTN_LIST\";\n\n//选中按钮名称\nexport const BTN_NAME = \"BTN_NAME\";\nexport const BTN_INDEX =\"BTN_INDEX\";\n\n//order book 参数列表\nexport const PARAM_LIST =\"PARAM_LIST\";\nexport const SET_CURRENT_STRATEGY =\"SET_CURRENT_STRATEGY\";\n\nexport const FIND_PENDING =\"FIND_PENDING\";\nexport const QUOTE_SOURCE =\"QUOTE_SOURCE\";\n\n//trade order list\nexport const FIND_REALTIME_ORDER=\"FIND_REALTIME_ORDER\";\nexport const QUOTE_ID =\"QUOTE_ID\";\nexport const QUOTE_MESSAGE =\"QUOTE_MESSAGE\";\nexport const QUOTE_RFQ =\"QUOTE_RFQ\";\n\n//头寸\nexport const POSITION_LIST = \"POSITION_LIST\";\nexport const POSITION_LIST_LOADING = \"POSITION_LIST_LOADING\";\nexport const MARKET_PRICE = \"MARKET_PRICE\";\nexport const REFERENCE_PRICE = \"REFERENCE_PRICE\";\nexport const CCYPOSI_LIST = \"CCYPOSI_LIST\";\nexport const CCYPOSI_LIST_LOADING = \"CCYPOSI_LIST_LOADING\";\n\n//CounterParty\nexport const COUNTERPARTY_LIST = \"COUNTERPARTY_LIST\";\nexport const COUNTER_LIST_LOADING = \"COUNTER_LIST_LOADING\";\n//自动平盘\nexport const HEDGE_LIST = \"HEDGE_LIST\";\nexport const HEDGE_LIST_LOADING = \"HEDGE_LIST_LOADING\";\nexport const SAVE_HEDGE_LIST = \"SAVE_HEDGE_LIST\";\nexport const HEDGE_LIST_UNSAVED = \"HEDGE_LIST_UNSAVED\";\nexport const HEDGE_SELECT_VALUE = \"HEDGE_SELECT_VALUE\";\n//自动报价\nexport const CLIENT_FLOW_LIST = \"CLIENT_FLOW_LIST\";\nexport const CLIENT_FLOW_LIST_LOADING = \"CLIENT_FLOW_LIST_LOADING\";\nexport const CLIENT_FLOW_LIST_UNSAVED = \"CLIENT_FLOW_LIST_UNSAVED\";\nexport const CLIENT_FLOW_SELECT_VALUE = \"CLIENT_FLOW_SELECT_VALUE\";\n//手动报价\nexport const MANUAL_QUOTE_LIST = \"MANUAL_QUOTE_LIST\";\nexport const MANUAL_QUOTE_LIST_LOADING = \"MANUAL_QUOTE_LIST_LOADING\";\nexport const SAVE_QUOTE_OUTPUT = \"SAVE_QUOTE_OUTPUT\";\n\n//交易订单\nexport const TRADE_ORDER_LIST_LOADING = \"TRADE_ORDER_LIST_LOADING\";\n\n// 手动交易\nexport const MANUAL_TRADING_QUOTEREQUEST = \"MANUAL_TRADING_QUOTEREQUEST\";\nexport const FIND_TODAY_QUOTE_REQUEST = \"FIND_TODAY_QUOTE_REQUEST\";\nexport const SAVE_MANUAL_REQUEST_INFO = \"SAVE_MANUAL_REQUEST_INFO\";\nexport const FIND_TODAY_ORDER = \"FIND_TODAY_ORDER\";\nexport const SET_QUOTE_REQUEST_ID = \"SET_QUOTE_REQUEST_ID\";\nexport const PLACE_ORDER = \"PLACE_ORDER\";\n\nexport const CHANGE_SHOW_CLIENTFLOW = \"CHANGE_SHOW_CLIENTFLOW\";\nexport const CHANGE_SHOW_RISKMONITOR = \"CHANGE_SHOW_RISKMONITOR\";\nexport const CHANGE_SHOW_TRADING = \"CHANGE_SHOW_TRADING\";\nexport const CHANGE_SHOW_BLOTTER = \"CHANGE_SHOW_BLOTTER\";\n\n//风险->市场风险监测监测\nexport const MARKET_RISK_LOADING = \"MARKET_RISK_LOADING\";\nexport const MARKET_RISK_UNSAVED = \"MARKET_RISK_UNSAVED\";\nexport const MARKET_RISK_SELECT_VALUE = \"MARKET_RISK_SELECT_VALUE\";\nexport const MARKET_RISK_LIST = \"MARKET_RISK_LIST\";\n\n//风险->操作风险监测监测\nexport const OPERATION_RISK_LOADING = \"OPERATION_RISK_LOADING\";\nexport const OPERATION_RISK_UNSAVED = \"OPERATION_RISK_UNSAVED\";\nexport const OPERATION_RISK_SELECT_VALUE = \"OPERATION_RISK_SELECT_VALUE\";\nexport const OPERATION_RISK_LIST = \"OPERATION_RISK_LIST\";\n\nexport const CHANGE_SHOW_MARKET = \"CHANGE_SHOW_MARKET\";\nexport const CHANGE_SHOW_OPERATION = \"CHANGE_SHOW_OPERATION\";\n\n//授信\nexport const COUNTER_PARTY_LOADING = \"COUNTER_PARTY_LOADING\";\nexport const COUNTER_PARTY_LIST = \"COUNTER_PARTY_LIST\";\nexport const CPTY_GROUP_LOADING = \"CPTY_GROUP_LOADING\";\nexport const CPTY_GROUP_LIST = \"CPTY_GROUP_LIST\";\n\nexport const MARKET_RISK_STATUS = \"MARKET_RISK_STATUS\";\nexport const RISK_ALERT = \"RISK_ALERT\";\n\nexport const CURRENT_GROUP = \"CURRENT_GROUP\";\nexport const SELECTED_CPTY = \"SELECTED_CPTY\";\n\nexport const ORDER_BOOK_VALUE = \"ORDER_BOOK_VALUE\";\nexport const SOCKET_CONNECTED = \"SOCKET_CONNECTED\";\n\nexport const MARKET_DATA = \"MARKET_DATA\";\nexport const APPLIED_MARKET = \"APPLIED_MARKET\";\n\nexport const MARKET_PRICE_MSG = \"MARKET_PRICE_MSG\";\nexport const MARKET_PRICE_ALL = \"MARKET_PRICE_ALL\";\n\nexport const INPUT_INFO = \"INPUT_INFO\";\n\nexport const LIQUIDITY_LIST = \"LIQUIDITY_LIST\";\nexport const LIQUIDITY_LIST_LOADING = \"LIQUIDITY_LIST_LOADING\";\nexport const L_SYMBOL_LIST = \"L_SYMBOL_LIST\";\nexport const L_SYMBOL_LIST_LOADING = \"L_SYMBOL_LIST_LOADING\";\nexport const L_SYMBOL_LIST_COPY_LOADING = \"L_SYMBOL_LIST_COPY_LOADING\";\nexport const MARKET_PRICE_LIQUIDITY = \"MARKET_PRICE_LIQUIDITY\";\n\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const GET_SYSTEM_ALERT = \"GET_SYSTEM_ALERT\";\n\nexport const MARKET_SELECT_VALUE = \"MARKET_SELECT_VALUE\";\nexport const OPERATION_SELECT_VALUE = \"OPERATION_SELECT_VALUE\";\n\nexport const LIQUIDITY_REFERENCE = \"LIQUIDITY_REFERENCE\";\n\nexport const FIND_EXECUTION_BY_ORDER_ID = \"FIND_EXECUTION_BY_ORDER_ID\";\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    corePriceList: [],\n    marketConfigList: [],\n    currentCorePrice: {}\n};\n\nexport default (state = initialState, action) => {\n    let newCorePriceList = [...state.corePriceList];\n    let newCurrentCorePrice = { ...state.currentCorePrice };\n    switch (action.type) {\n    case ActionTypes.GET_CORE_PRICE_LIST:\n        return {\n            ...state,\n            corePriceList: action.payload\n        };\n    case ActionTypes.SAVE_CORE_PRICE:\n        for (let i = 0; i < newCorePriceList.length; i++) {\n            if (newCorePriceList[i].id === action.payload.id) {\n                newCorePriceList[i] = action.payload;\n                break;\n            }\n        }\n        return {\n            ...state,\n            corePriceList: newCorePriceList\n        };\n    case ActionTypes.CREATE_CORE_PRICE:\n        newCorePriceList.push(action.payload);\n        return {\n            ...state,\n            corePriceList: newCorePriceList\n        };\n    case ActionTypes.CORE_PRICE_MAERKET_CONFIG_LIST:\n        return {\n            ...state,\n            marketConfigList: action.payload\n        };\n    case ActionTypes.DELETE_CORE_PRICE:\n        for (let i = 0; i < newCorePriceList.length; i++) {\n            if (newCorePriceList[i].id === action.payload) {\n                newCorePriceList.splice(i, 1);\n                break;\n            }\n        }\n        return {\n            ...state,\n            corePriceList: newCorePriceList\n        };\n    case ActionTypes.GET_CORE_PRICE_BY_ID:\n        state.currentCorePrice = action.payload;\n        return {\n            ...state\n        };\n    case ActionTypes.CHANGE_SOURCE_INIT_STATUS:\n        for (let i = 0; i < newCurrentCorePrice.referencePriceSourceLists.length; i++) {\n            if (newCurrentCorePrice.referencePriceSourceLists[i].id === action.payload.sourceItemId) {\n                newCurrentCorePrice.referencePriceSourceLists[i].init = action.payload.targetStatus;\n                break;\n            }\n        }\n        return {\n            ...state,\n            currentCorePrice: newCurrentCorePrice\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {};\nconst Save_trReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.SAVE_TR:\n        return {\n            ...state,\n            list: action.payload,\n        };\n   \n    default:\n        return state;\n    }\n};\nexport default Save_trReducer;","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n};\n\nconst find_PrincingReducer = (state = initialState, action) => {\n   \n    switch (action.type) {\n    case ActionTypes.SAVE_PRICING_LIST:\n        return {\n            ...state,\n            pricingList: action.payload,\n        };\n   \n    case ActionTypes.FIND_PRICING_LIST:\n\n        return {\n            ...state,\n            pricingList: action.payload,\n        };\n   \n    case ActionTypes.DELETE_PRICING_LIST:\n        return {\n            ...state,\n            pricingList: action.payload,\n        };\n   \n    default:\n        return state;\n    }\n};\nexport default find_PrincingReducer;","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {};\nconst themeReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.SET_THEME:\n        return {\n            ...state,\n            theme: action.payload,\n        };\n   \n    default:\n        return state;\n    }\n};\nexport default themeReducer;","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    showDetailPage:true\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.MARKET_PAGE_EX:\n        return {\n            ...state,\n            showDetailPage: action.payload,\n        };\n        // case ActionTypes.GET_REFERENCE:\n        //     return {\n        //         ...state,\n        //         referencePriceData: action.payload,\n        //     };\n        \n    default:\n        return state;\n    }\n};\n","import { GET_SYMBOLLIST, SAVE_APPLY_BTN } from \"../constants/ActionTypes\";\n\nconst initialState = {\n    applyBtn: false,\n};\n\nconst SymbolListReducer = (state=initialState, action) => {\n    switch (action.type) {\n    case GET_SYMBOLLIST:\n        return {\n            ...state,\n            normal_list: action.normal_list,\n            group_list: action.group_list,\n            group_name: action.group_name,\n        };\n    case SAVE_APPLY_BTN:\n        return {\n            ...state,\n            applyBtn: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n\nexport default SymbolListReducer;","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    distributionList: [],\n    distributionQuoteList: [],\n    quoteSourceList: []\n};\n\nexport default (state = initialState, action) => {\n    let newDistributionList = [...state.distributionList];\n\n    switch (action.type) {\n    case ActionTypes.GET_DISTRIBUTION_LIST_BY_INSTANCE_ID:\n        return {\n            ...state,\n            distributionList: action.payload,\n            distributionQuoteList: [],\n            lastActionType: action.type\n        };\n    case ActionTypes.SAVE_DISTRIBUTION:\n        for (let i = 0; i < newDistributionList.length; i++) {\n            if (newDistributionList[i].id === action.payload.id) {\n                newDistributionList[i] = action.payload;\n                break;\n            }\n        }\n        return {\n            ...state,\n            distributionList: newDistributionList,\n            lastActionType: action.type\n        };\n    case ActionTypes.ADD_DISTRIBUTION:\n        newDistributionList.push(action.payload);\n        return {\n            ...state,\n            distributionList: newDistributionList,\n            lastActionType: action.type\n        };\n    case ActionTypes.DELETE_DISTRIBUTION_BY_ID:\n        for (let i = 0; i < newDistributionList.length; i++) {\n            if (newDistributionList[i].id === action.payload) {\n                newDistributionList.splice(i, 1);\n                break;\n            }\n        }\n        return {\n            ...state,\n            distributionList: newDistributionList,\n            lastActionType: action.type\n        };\n    case ActionTypes.SAVE_QUOTE:\n        return {\n            ...state,\n            distributionQuoteList: [...action.payload],\n            lastActionType: action.type\n        };\n    case ActionTypes.GET_QUOTE_SOURCE_LIST:\n        return {\n            ...state,\n            quoteSourceList: action.payload\n        };\n    default:\n        return state;\n    }\n};\n","import {SAVE_PARAM, SAVE_SOCKET} from \"../constants/ActionTypes\";\n\nconst initialState = {};\nconst paramReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case SAVE_PARAM:\n        return {\n            ...state,\n            strategyParam: action.strategyParam,\n        };\n    default:\n        return state;\n    }\n};\nexport default paramReducer;","import {GET_REFERENCE, SAVE_SOCKET, SAVE_SOCKET_INSTANCEOUTPUT} from \"../constants/ActionTypes\";\n\nconst initialState = {};\nconst stocketReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case GET_REFERENCE:\n        return {\n            ...state,\n            referencePriceData: action.payload,\n        };\n        \n    case SAVE_SOCKET:\n        // console.log(action.socketList);\n        return {\n            ...state,\n            socketList: action.socketList\n        };\n    case SAVE_SOCKET_INSTANCEOUTPUT:\n        return {\n            ...state,\n            socket_instanceList: action.payload\n        };\n    default:\n        return state;\n    }\n};\nexport default stocketReducer;","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    // strategyBtnList:[]\n    btnName:{},\n    paramList:[],\n    btnIndex:{},\n    inputInfo: {},\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.STRATEGY_LIST:\n        return {\n            ...state,\n            strategyList: action.payload,\n        };\n    case ActionTypes.BTN_NAME:\n        return {\n            ...state,\n            btnName: action.payload,\n        };\n    case ActionTypes.BTN_INDEX:\n        return {\n            ...state,\n            btnIndex: action.payload,\n        };\n    case ActionTypes.PARAM_LIST:\n        return {\n            ...state,\n            paramList: action.payload,\n        };\n    case ActionTypes.INPUT_INFO:\n        return {\n            ...state,\n            inputInfo: action.payload,\n        };\n        \n    default:\n        return state;\n    }\n};\n","import { COUNTER_PARTY, COUNTER_PARTY_DRAG,COUNTER_PARTY_SAVE } from \"../constants/ActionTypes\";\n\nconst initialState = {};\n\nconst CounterPartyReducer = (state=initialState, action) => {\n    switch (action.type) {\n    case COUNTER_PARTY:\n        console.log(action);\n        return {\n            ...state,\n            list: action.payload,\n            nameObj: action.nameObj\n        };\n    case COUNTER_PARTY_DRAG:\n        return {\n            ...state,\n            list_drag: action.payload\n        };\n    case COUNTER_PARTY_SAVE:\n        return {\n            ...state,\n            list_save: action.payload\n        };\n    default:\n        return state;\n    }\n};\n\nexport default CounterPartyReducer;","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    loading: false,\n    counterPartyList: []\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.COUNTERPARTY_LIST:\n        return {\n            ...state,\n            counterPartyList: action.payload,\n        };\n    case ActionTypes.COUNTER_LIST_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\n\nconst initialState = {\n    quoteList:[],\n    quoteID:null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.FIND_PENDING:\n        return {\n            ...state,\n            quoteList:action.payload\n        };\n    case ActionTypes.QUOTE_SOURCE:\n        return {\n            ...state,\n            quoteSource:action.payload\n        };\n    case ActionTypes.QUOTE_ID:\n        return {\n            ...state,\n            quoteID:action.payload\n        };\n    case ActionTypes.QUOTE_MESSAGE:\n        return {\n            ...state,\n            quoteMessage:action.payload\n        };\n\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    orderList: [],\n    totalRecords: 0,\n    loading: false,\n};\n\nconst TradeBlotterReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.FIND_REALTIME_ORDER:\n        return {\n            ...state,\n            orderList: action.payload.data,\n            totalRecords: action.payload.totalRecords,\n        };\n    case ActionTypes.TRADE_ORDER_LIST_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default TradeBlotterReducer;","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    list: [],\n    totalRecords: 0,\n    loading: false,\n    addList: [],\n    addListCopy: [],\n    addLoading: false,\n    mktPriceMsg: {},\n    referencePrice: {}\n};\n\nconst LiquidityReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.LIQUIDITY_LIST:\n        return {\n            ...state,\n            list: action.payload,\n            totalRecords: action.payload.totalRecords,\n        };\n    case ActionTypes.LIQUIDITY_LIST_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n    case ActionTypes.L_SYMBOL_LIST_LOADING:\n        return {\n            ...state,\n            addLoading: action.payload,\n        };\n    case ActionTypes.L_SYMBOL_LIST:\n        return {\n            ...state,\n            addList: action.payload,\n        };\n    case ActionTypes.L_SYMBOL_LIST_COPY_LOADING:\n        return {\n            ...state,\n            addListCopy: action.payload,\n        };\n    case ActionTypes.MARKET_PRICE_LIQUIDITY:\n        return {\n            ...state,\n            mktPriceMsg: action.payload,\n        };\n    case ActionTypes.LIQUIDITY_REFERENCE:\n        return {\n            ...state,\n            referencePrice: action.payload,\n        };\n\n\n    default:\n        return state;\n    }\n};\n\nexport default LiquidityReducer;\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    loading: false,\n    ccyPosiLoading: false,\n    positionList: [],\n    ccyPosiList: [],\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.POSITION_LIST:\n        return {\n            ...state,\n            positionList: action.payload,\n        };\n    case ActionTypes.POSITION_LIST_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n\n    case ActionTypes.CCYPOSI_LIST:\n        return {\n            ...state,\n            ccyPosiList: action.payload,\n        };\n    case ActionTypes.CCYPOSI_LIST_LOADING:\n        return {\n            ...state,\n            ccyPosiLoading: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    loading: false,\n    unsaved: false,\n    hedgeList: [],\n    selectValue: {},\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.HEDGE_LIST:\n        return {\n            ...state,\n            hedgeList: action.payload,\n        };\n    case ActionTypes.HEDGE_LIST_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n    case ActionTypes.HEDGE_LIST_UNSAVED:\n        return {\n            ...state,\n            unsaved: action.payload,\n        };\n    case ActionTypes.HEDGE_SELECT_VALUE:\n        return {\n            ...state,\n            selectValue: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    loading: false,\n    unsaved: false,\n    clientFlowList: [],\n    selectValue: {},\n\n    showClientFlow: true,\n    showRiskMonitor: true,\n\n    showManualTrading: true,\n    showRradeBlotter: true,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.CLIENT_FLOW_LIST:\n        return {\n            ...state,\n            clientFlowList: action.payload,\n        };\n    case ActionTypes.CLIENT_FLOW_LIST_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n    case ActionTypes.CLIENT_FLOW_LIST_UNSAVED:\n        return {\n            ...state,\n            unsaved: action.payload,\n        };\n    case ActionTypes.CLIENT_FLOW_SELECT_VALUE:\n        return {\n            ...state,\n            selectValue: action.payload,\n        };\n    case ActionTypes.CHANGE_SHOW_CLIENTFLOW:\n        return {\n            ...state,\n            showClientFlow: action.payload,\n        };\n    case ActionTypes.CHANGE_SHOW_RISKMONITOR:\n        return {\n            ...state,\n            showRiskMonitor: action.payload,\n        };\n    case ActionTypes.CHANGE_SHOW_TRADING:\n        return {\n            ...state,\n            showManualTrading: action.payload,\n        };\n    case ActionTypes.CHANGE_SHOW_BLOTTER:\n        return {\n            ...state,\n            showRradeBlotter: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    loading: false,\n    manualQuoteList: [],\n    quoteSource: [],\n    quoteOutput: undefined,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.MANUAL_QUOTE_LIST:\n        return {\n            ...state,\n            manualQuoteList: action.payload,\n        };\n    case ActionTypes.MANUAL_QUOTE_LIST_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n    case ActionTypes.QUOTE_SOURCE:\n        return {\n            ...state,\n            quoteSource: action.payload,\n        };\n    case ActionTypes.SAVE_QUOTE_OUTPUT:\n        return {\n            ...state,\n            quoteOutput: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    marketPrice: {},\n    marketPriceRecord: {},\n    referencePrice: {},\n    mktPriceMsg: {},\n    minTicks: {},\n    orderBook: {},\n    connected: 3,\n\n    showNotification: true,\n};\n\nexport default (state = initialState, action) => {\n    // console.log(\"action:\", action);\n    switch (action.type) {\n    case ActionTypes.MARKET_PRICE:\n        return {\n            ...state,\n            marketPrice: action.payload,\n        };\n    case ActionTypes.REFERENCE_PRICE:\n        return {\n            ...state,\n            referencePrice: action.payload,\n        };\n    case ActionTypes.MARKET_PRICE_MSG:\n        return {\n            ...state,\n            mktPriceMsg: action.payload,\n        };\n    case ActionTypes.MARKET_PRICE_ALL:\n        return {\n            ...state,\n            marketPrice: action.payload.marketPrice,\n            mktPriceMsg: action.payload.mktPriceMsg,\n        };\n    case ActionTypes.SAVE_MINTICK:\n        return {\n            ...state,\n            minTicks: action.payload,\n        };\n    case ActionTypes.ORDER_BOOK_VALUE:\n        return {\n            ...state,\n            orderBook: action.payload,\n        };\n    case ActionTypes.SOCKET_CONNECTED:\n        return {\n            ...state,\n            connected: action.payload,\n        };\n    case ActionTypes.SHOW_NOTIFICATION:\n        return {\n            ...state,\n            showNotification: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import { SET_CURRENT_STRATEGY } from \"../constants/ActionTypes\";\n\nconst initialState = {};\n\nconst currentStrategy = (state=initialState, action) => {\n    // console.log(action);\n    switch (action.type) {\n    case SET_CURRENT_STRATEGY:\n        return {\n            ...state,\n            currentStrategy: action.currentStrategy,\n            isFixed: action.isFixed\n        };\n    default:\n        return state;\n    }\n};\n\nexport default currentStrategy;","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    manualTradingQuoteRequest: {},\n    todayQuoteRequest: [],\n    manualQuoteRequestInfo: {},\n\n    // venueSelectValue: [],\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.MANUAL_QUOTE_LIST:\n        return {\n            ...state,\n            manualTradingQuoteRequest: action.payload,\n        };\n\n    case ActionTypes.FIND_TODAY_QUOTE_REQUEST:\n        return {\n            ...state,\n            todayQuoteRequest: action.payload\n        };\n    \n    case ActionTypes.SET_QUOTE_REQUEST_ID:\n        return {\n            ...state,\n            currentQuoteRequestId: action.currentQuoteRequestId\n        };\n        \n    case ActionTypes.SAVE_MANUAL_REQUEST_INFO:\n        return {\n            ...state,\n            manualQuoteRequestInfo: action.payload,\n        };\n\n    case ActionTypes.FIND_TODAY_ORDER:\n        return {\n            ...state,\n            findTodayOrderGet: action.payload,\n        };\n\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    loading: false,\n    unsaved: false,\n    list: [],\n    selectValue: {},\n\n    showMarket: true,\n    showOperation: true,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.MARKET_RISK_LIST:\n        return {\n            ...state,\n            list: action.payload,\n        };\n    case ActionTypes.MARKET_RISK_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n    case ActionTypes.MARKET_RISK_UNSAVED:\n        return {\n            ...state,\n            unsaved: action.payload,\n        };\n    case ActionTypes.MARKET_RISK_SELECT_VALUE:\n        return {\n            ...state,\n            selectValue: action.payload,\n        };\n    case ActionTypes.CHANGE_SHOW_MARKET:\n        return {\n            ...state,\n            showMarket: action.payload,\n        };\n    case ActionTypes.CHANGE_SHOW_OPERATION:\n        return {\n            ...state,\n            showOperation: action.payload,\n        };\n    case ActionTypes.MARKET_SELECT_VALUE:\n        return {\n            ...state,\n            selectValue: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    loading: false,\n    unsaved: false,\n    list: [],\n    selectValue: {},\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.OPERATION_RISK_LIST:\n        return {\n            ...state,\n            list: action.payload,\n        };\n    case ActionTypes.OPERATION_RISK_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n    case ActionTypes.OPERATION_RISK_UNSAVED:\n        return {\n            ...state,\n            unsaved: action.payload,\n        };\n    case ActionTypes.OPERATION_RISK_SELECT_VALUE:\n        return {\n            ...state,\n            selectValue: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    marketRiskStatus: [],\n    riskAlert: [],\n};\n\nexport default (state = initialState, action) => {\n    // console.log(\"+++\", state);\n    switch (action.type) {\n    case ActionTypes.MARKET_RISK_STATUS:\n        return {\n            ...state,\n            marketRiskStatus: action.payload,\n        };\n    case ActionTypes.RISK_ALERT:\n        return {\n            ...state,\n            riskAlert: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    loading: false,\n    groupLoading: false,\n    cptyList: [],\n    groupList: [],\n\n    currentGroup: {},\n    selectedCpty: [],\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.COUNTER_PARTY_LIST:\n        return {\n            ...state,\n            cptyList: action.payload,\n        };\n    case ActionTypes.COUNTER_PARTY_LOADING:\n        return {\n            ...state,\n            loading: action.payload,\n        };\n    case ActionTypes.CPTY_GROUP_LIST:\n        return {\n            ...state,\n            groupList: action.payload,\n        };\n    case ActionTypes.CPTY_GROUP_LOADING:\n        return {\n            ...state,\n            groupLoading: action.payload,\n        };\n    case ActionTypes.CURRENT_GROUP:\n        return {\n            ...state,\n            currentGroup: action.payload,\n        };\n    case ActionTypes.SELECTED_CPTY:\n        return {\n            ...state,\n            selectedCpty: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    marketData: [],\n    appliedMarket: [],\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.MARKET_DATA:\n        return {\n            ...state,\n            marketData: action.payload,\n        };\n    case ActionTypes.APPLIED_MARKET:\n        return {\n            ...state,\n            appliedMarket: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import * as ActionTypes from \"../constants/ActionTypes\";\n\nconst initialState = {\n    systemAlert: []\n};\n\nconst systemAlertReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.GET_SYSTEM_ALERT:\n        return {\n            ...state,\n            systemAlert: action.payload.data\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default systemAlertReducer;","import * as ActionTypes from \"../../constants/spdb/ActionTypes\";\n\nconst initialState = {\n    orderBookList: [],\n    tradingvarietymanage: [],\n    selectedQuotes: [],\n\n    orderBook1: undefined,\n    orderBook2: undefined,\n    orderBook3: undefined,\n\n    mkData: {},\n    clickId: undefined,\n\n    allBook: [],\n    paintPrice: {},\n\n    socketConnected: 3,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n    case ActionTypes.ORDER_BOOK_LIST:\n        return {\n            ...state,\n            orderBookList: action.payload,\n        };\n    case ActionTypes.TRADINGVARIETYMANAGE_FIND:\n        return {\n            ...state,\n            tradingvarietymanage: action.payload,\n        };\n    case ActionTypes.SELECTED_QUOTES:\n        return {\n            ...state,\n            selectedQuotes: action.payload,\n        };\n    case ActionTypes.SET_ORDER_BOOK:\n        return {\n            ...state,\n            orderBook1: action.payload.orderBook1,\n            orderBook2: action.payload.orderBook2,\n            orderBook3: action.payload.orderBook3,\n        };\n    case ActionTypes.SET_ORDER_BOOK_1:\n        return {\n            ...state,\n            orderBook1: action.payload,\n        };\n    case ActionTypes.SET_ORDER_BOOK_2:\n        return {\n            ...state,\n            orderBook2: action.payload,\n        };\n    case ActionTypes.SET_ORDER_BOOK_3:\n        return {\n            ...state,\n            orderBook3: action.payload,\n        };\n    case ActionTypes.MARKET_PRICE_DATA:\n        return {\n            ...state,\n            mkData: action.payload,\n        };\n    case ActionTypes.CLICK_SYMBOL_ID:\n        return {\n            ...state,\n            clickId: action.payload,\n        };\n    case ActionTypes.SAVE_ALL_BOOK:\n        return {\n            ...state,\n            allBook: action.payload,\n        };\n    case ActionTypes.PAINT_PRICE:\n        return {\n            ...state,\n            paintPrice: action.payload,\n        };\n    case ActionTypes.SOCKET_CONNECTED:\n        return {\n            ...state,\n            socketConnected: action.payload,\n        };\n    default:\n        return state;\n    }\n};\n","import { combineReducers } from \"redux\";\n\nimport marketPrice from \"../../marketMaker/reducers/marketPrice\";\nimport groupsReducer from \"../../marketMaker/reducers/marketGroups\";\nimport corePrice from \"../../marketMaker/reducers/corePrice\";\nimport Save_trReducer from \"../../marketMaker/reducers/save_tr\";\nimport Save_PricingList from \"../../marketMaker/reducers/save_pricingList\";\nimport themeReducer from \"../../marketMaker/reducers/setTheme\";\nimport marketDetail from \"../../marketMaker/reducers/marketDetail\";\nimport SymbolListReducer from \"../../marketMaker/reducers/symbolList\";\nimport Distribution from \"../../marketMaker/reducers/distribution\";\nimport paramReducer from \"../../marketMaker/reducers/saveParam\";\nimport stocketReducer from \"../../marketMaker/reducers/stocketReducer\";\nimport bookHeader from \"../../marketMaker/reducers/bookheader\";\nimport CounterPartyReducer from \"../../marketMaker/reducers/counterParty\";\nimport counterPartyList from \"../../marketMaker/reducers/counterpty\";\nimport rfqTable from \"../../marketMaker/reducers/rfqTable\";\nimport tradeBlotterReducer from \"../../marketMaker/reducers/tradeBlotter\";\nimport LiquidityReducer from \"../../marketMaker/reducers/liquidity\";\n\nimport riskMonitorReducer from \"../../marketMaker/reducers/riskmonitor\";\nimport autoHedgeReducer from \"../../marketMaker/reducers/autohedge\";\nimport clientFlowReducer from \"../../marketMaker/reducers/clientFlow\";\nimport manualQuoteReducer from \"../../marketMaker/reducers/manualQuote\";\nimport globalReducer from \"../../marketMaker/reducers/globalReducer\";\nimport currentStrategyReducer from \"../../marketMaker/reducers/currentStrategy\";\n// 手动交易\nimport manualTradingReducer from \"../../marketMaker/reducers/manualTrading\";\nimport marketRiskReducer from \"../../marketMaker/reducers/marketRisk\";\nimport operationRiskReducer from \"../../marketMaker/reducers/operationRisk\";\nimport riskMonitorMain from \"../../marketMaker/reducers/riskMonitorMain\";\nimport creditCptyReducer from \"../../marketMaker/reducers/creditCounterParty\";\nimport marketDataReducer from \"../../marketMaker/reducers/marketDataReducer\";\nimport systemAlertReducer from \"../../marketMaker/reducers/systemAlertReducer\";\n\n//spdb\nimport odmReducer from \"../../marketMaker/reducers/spdb/odmReducer\";\n\nconst rootReducer = combineReducers({\n    // TODO\n\n    marketPrice,\n    groupsReducer,\n    corePrice,\n    Save_trReducer,\n    Save_PricingList,\n    themeReducer,\n    marketDetail,\n    SymbolListReducer,\n    Distribution,\n    paramReducer,\n    stocketReducer,\n    bookHeader,\n    CounterPartyReducer,\n    counterPartyList,\n    rfqTable,\n    tradeBlotterReducer,\n    globalReducer,\n\n    riskMonitorReducer,\n    autoHedgeReducer,\n    clientFlowReducer,\n    manualQuoteReducer,\n    currentStrategyReducer,\n    manualTradingReducer,\n    marketRiskReducer,\n    operationRiskReducer,\n    creditCptyReducer,\n    riskMonitorMain,\n\n    marketDataReducer,\n    LiquidityReducer,\n    systemAlertReducer,\n\n    odmReducer,\n});\n\nexport default rootReducer;\n","export const ORDER_BOOK_LIST = \"ORDER_BOOK_LIST\";\nexport const TRADINGVARIETYMANAGE_FIND = \"TRADINGVARIETYMANAGE_FIND\";\nexport const SELECTED_QUOTES = \"SELECTED_QUOTES\";\nexport const SET_ORDER_BOOK = \"SET_ORDER_BOOK\";\nexport const SET_ORDER_BOOK_1 = \"SET_ORDER_BOOK_1\";\nexport const SET_ORDER_BOOK_2 = \"SET_ORDER_BOOK_2\";\nexport const SET_ORDER_BOOK_3 = \"SET_ORDER_BOOK_3\";\nexport const MARKET_PRICE_DATA = \"MARKET_PRICE_DATA\";\nexport const PLACE_ORDER = \"PLACE_ORDER\";\nexport const FIND_BOOK_BY_USER = \"FIND_BOOK_BY_USER\";\nexport const CLICK_SYMBOL_ID = \"CLICK_SYMBOL_ID\";\nexport const SAVE_ALL_BOOK = \"SAVE_ALL_BOOK\";\nexport const PAINT_PRICE = \"PAINT_PRICE\";\nexport const SOCKET_CONNECTED = \"SOCKET_CONNECTED\";\n","import reducer from \"./reducerIndex\";\nimport {applyMiddleware, createStore, compose} from \"redux\";\n// import {createLogger} from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\n// const logger = createLogger({\n//     collapsed: true,\n// });\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer,\n    // composeEnhancers(applyMiddleware(thunk, logger)),\n    composeEnhancers(applyMiddleware(thunk)),\n);\n\nif (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"./reducerIndex\", () => {\n        const nextRootReducer = require(\"./reducerIndex\");\n        store.replaceReducer(nextRootReducer);\n    });\n}\n\nexport default store;","import React from \"react\";\nimport { connect } from \"react-redux\";\nclass HomePage extends React.Component{\n    state = {\n        tradeType: \"ODM\",\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 style={{textAlign: \"center\",marginTop: 200}}>Hello Frank!</h1>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    \n});\nexport default connect(mapStateToProps,mapDispatchToProps)(HomePage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch, withRouter } from \"react-router\";\nimport { Layout } from \"antd\";\nimport Home from \"../../marketMaker/pages/home\";\nclass Routes extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        return (\n            <Layout>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                </Switch>\n            </Layout>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routes));\n","import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","import store from \"../common/store\";\nimport Routes from \"../common/routes/Routes\";\nimport history from \"./utils/history\";\nimport { Provider } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport { Router } from \"react-router-dom\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router history={history}>\n                    <div className=\"container\">\n                        <Routes type={this.props.type} />\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./marketMaker/App\";\nimport * as serviceWorker from \"./marketMaker/utils/serviceWorker\";\nimport \"antd/dist/antd.css\";\nrequire(\"./marketMaker/index.scss\");\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}